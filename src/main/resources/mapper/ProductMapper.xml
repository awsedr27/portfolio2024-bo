<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.portfolioBo.product.dao.ProductDao">

	<select id="selectProduct" parameterType="Integer" resultType="com.portfolioBo.product.dto.ProductDto">
        SELECT 
			product_id,
			name,
			description,
			use_yn,
			price,
			category_id,
			quantity,
			create_date,
			modify_date
        FROM 
            product
        WHERE product_id=#{productId}
    </select>
	<select id="selectProductDetail" parameterType="Integer" resultType="com.portfolioBo.product.dto.ProductDto$ProductDetailResult">
        SELECT 
			p.product_id,
			p.name,
			p.description,
			p.use_yn,
			p.price,
			p.category_id,
			p.quantity,
			p.create_date,
			p.modify_date,
			CONCAT(f.file_id, '.', f.file_type) AS imageUrl
        FROM 
            product p
        LEFT OUTER JOIN file f ON f.reference_id =p.product_id AND f.use_yn ='Y' AND f.reference_type ='PRODUCT_IMG'
        WHERE p.product_id =#{productId}
    </select>
    <select id="selectProductList" parameterType="com.portfolioBo.product.dto.ProductDto$ProductListQuery" resultType="com.portfolioBo.product.dto.ProductDto$ProductListResult">
        SELECT 
			p.product_id,
			p.name,
			p.description,
			p.use_yn,
			p.price,
			c.name as categoryName,
			p.create_date,
			p.modify_date,
			CONCAT(f.file_id, '.', f.file_type) AS imageUrl
        FROM 
            product p
        LEFT OUTER JOIN file f ON f.reference_id =p.product_id AND f.use_yn ='Y' AND f.reference_type ='PRODUCT_IMG'
        LEFT OUTER JOIN category c ON c.category_id =p.category_id 
        WHERE
            1=1
            <if test="productId != null">
                AND p.product_id = #{productId}
            </if>
            <if test="name != null and name != ''">
                AND p.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="useYn != null and useYn != ''">
                AND p.use_yn = #{useYn}
            </if>
            <if test="price != null">
                AND p.price = #{price}
            </if>
            <if test="categoryName != null and categoryName != ''">
                AND c.name LIKE CONCAT('%', #{categoryName}, '%')
            </if>
            ORDER BY p.create_date DESC
			LIMIT #{paging.startRecordIndex}, #{paging.pageSize}
    
    </select>
    <select id="selectProductListCnt" parameterType="com.portfolioBo.product.dto.ProductDto$ProductListCntQuery" resultType="Integer">
        SELECT 
        	COUNT(*)
        FROM 
            product p
        LEFT OUTER JOIN file f ON f.reference_id =p.product_id AND f.use_yn ='Y' AND f.reference_type ='PRODUCT_IMG'
        LEFT OUTER JOIN category c ON c.category_id =p.category_id 
        WHERE
            1=1
            <if test="productId != null">
                AND p.product_id = #{productId}
            </if>
            <if test="name != null and name != ''">
                AND p.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="useYn != null and useYn != ''">
                AND p.use_yn = #{useYn}
            </if>
            <if test="price != null">
                AND p.price = #{price}
            </if>
            <if test="categoryName != null and categoryName != ''">
                AND c.name LIKE CONCAT('%', #{categoryName}, '%')
            </if>
    </select>
    <insert id="insertProduct" parameterType="com.portfolioBo.product.dto.ProductDto$ProductSaveQuery" useGeneratedKeys="true" keyProperty="productId">
        INSERT INTO product (
            name, 
            description, 
            use_yn, 
            price, 
            category_id,
            quantity
        ) 
        VALUES (
            #{name}, 
            #{description}, 
            #{useYn}, 
            #{price}, 
            #{categoryId},
            #{quantity}
        );
    </insert>
    <update id="updateProduct" parameterType="com.portfolioBo.product.dto.ProductDto$ProductUpdateQuery">
	    UPDATE product
		SET
	    name = #{name},
	    description = #{description},
	    use_yn = #{useYn},
	    price = #{price},
	    category_id = #{categoryId},
	    quantity=#{quantity}
		WHERE
	    product_id = #{productId};
    </update>
    
</mapper>